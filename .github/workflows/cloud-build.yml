name: Trigger Cloud Build job through Keyless Authentication with Workload Identity Federation
# Reference: https://cloud.google.com/iam/docs/using-workload-identity-federation#github-actions_1

on:
  push:
    branches:
    - main
  # Workflow can be triggered manually:
  workflow_dispatch:

env:
  REGION: europe-west9
  IMAGE_NAME: quickstart-image

jobs:
  cloud-build:
    name: Authenticate and Build
    runs-on: ubuntu-latest

    # Allow the job to fetch a GitHub ID token.
    permissions:
      id-token: write
      contents: read

    steps:
    # checkout MUST come before auth.
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      # Reference: https://github.com/google-github-actions/auth
      with:
        token_format: access_token     # Required for REST API calls
        create_credentials_file: true  # TODO: MANDATORY, even for Terraform?
        access_token_lifetime: '100s'  # TODO: Optional?
        workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
        service_account: ${{ secrets.SA_EMAIL }}
      # NOTE The google-github-actions/auth action automatically initializes `GOOGLE_APPLICATION_CREDENTIALS`.

    # `token_format` must be `access_token`.
    - name: List buckets with REST API call
      run: |-
        curl -X GET \
          https://storage.googleapis.com/storage/v1/b?project=${{ secrets.PROJECT_ID }} \
          --header "Authorization: Bearer ${{ steps.auth.outputs.access_token }}"

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      # Reference: https://github.com/google-github-actions/setup-gcloud

    # `create_credentials_file` must be `true`.
    - name: Authenticate using credentials file
      run: gcloud auth login --cred-file=${{ steps.auth.outputs.credentials_file_path }}

    - name: Confirm Cloud SDK runs as expected SA
      run: gcloud auth list
      # NOTE The actual name of the SA might be redacted as *** as GitHub recognizes it as a secret.

    - name: List buckets with `gcloud storage` call
      run: gcloud storage ls
    
    - name: Trigger build on Cloud Build
      run: |-
        gcloud builds submit \
          --quiet \
          --tag="${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/docker/${{ env.IMAGE_NAME }}:${GITHUB_SHA}"
